https://www.ooredoo.qa/portal/OoredooQatar/esim
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.3.5.151#dev}
|_ -| . [,]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 07:42:43 /2019-06-08/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[07:42:44] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[07:42:45] [INFO] testing connection to the target URL
[07:42:45] [WARNING] potential permission problems detected ('Access denied')
[07:42:45] [WARNING] the web server responded with an HTTP error code (403) which could interfere with the results of the tests
[07:42:45] [INFO] checking if the target is protected by some kind of WAF/IPS
[07:42:45] [INFO] testing if the target URL content is stable
[07:42:46] [WARNING] target URL content is not stable (i.e. content differs). sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user's manual paragraph 'Page comparison'
how do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] C
[07:42:46] [INFO] testing if URI parameter '#1*' is dynamic
[07:42:46] [INFO] URI parameter '#1*' appears to be dynamic
[07:42:46] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[07:42:46] [INFO] heuristic (XSS) test shows that URI parameter '#1*' might be vulnerable to cross-site scripting (XSS) attacks
[07:42:46] [INFO] testing for SQL injection on URI parameter '#1*'
[07:42:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[07:42:46] [WARNING] reflective value(s) found and filtering out
[07:42:48] [INFO] URI parameter '#1*' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable 
[07:42:48] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'Firebird' 
it looks like the back-end DBMS is 'Firebird'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[07:42:48] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[07:42:48] [INFO] testing 'Firebird OR error-based - WHERE or HAVING clause'
[07:42:49] [INFO] testing 'Firebird error-based - Parameter replace'
[07:42:49] [INFO] testing 'Firebird inline queries'
[07:42:49] [INFO] testing 'Firebird stacked queries (heavy query - comment)'
[07:42:49] [INFO] testing 'Firebird stacked queries (heavy query)'
[07:42:49] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query)'
[07:42:49] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query)'
[07:42:49] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query - comment)'
[07:42:49] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query - comment)'
[07:42:49] [INFO] testing 'Firebird time-based blind - Parameter replace (heavy query)'
[07:42:49] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[07:42:49] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[07:42:50] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[07:42:50] [INFO] target URL appears to have 40 columns in query
injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] Y
[07:43:14] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql') 
[07:43:16] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[07:43:17] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[07:43:18] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[07:43:20] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[07:43:21] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[07:43:23] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[07:43:24] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[07:43:26] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[07:43:27] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[07:43:29] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
[07:43:29] [WARNING] false positive or unexploitable injection point detected
[07:43:29] [WARNING] URI parameter '#1*' does not seem to be injectable
[07:43:29] [INFO] testing if parameter 'Host' is dynamic
[07:43:30] [INFO] heuristics detected web page charset 'ascii'
[07:43:30] [WARNING] parameter 'Host' does not appear to be dynamic
[07:43:30] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[07:43:30] [INFO] testing for SQL injection on parameter 'Host'
[07:43:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[07:43:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[07:43:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[07:43:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:43:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:43:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[07:43:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[07:43:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[07:43:55] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[07:43:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[07:43:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[07:43:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[07:43:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[07:43:56] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[07:44:00] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[07:44:02] [INFO] testing 'Firebird OR error-based - WHERE or HAVING clause'
[07:44:05] [INFO] testing 'Firebird error-based - Parameter replace'
[07:44:05] [INFO] testing 'Firebird error-based - ORDER BY clause'
[07:44:05] [INFO] testing 'Firebird inline queries'
[07:44:05] [INFO] testing 'Firebird stacked queries (heavy query - comment)'
[07:44:06] [INFO] testing 'Firebird stacked queries (heavy query)'
[07:44:08] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query)'
[07:44:11] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query)'
[07:44:14] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query - comment)'
[07:44:16] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query - comment)'
[07:44:18] [INFO] testing 'Firebird time-based blind - Parameter replace (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[07:44:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[07:44:38] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[07:44:58] [WARNING] parameter 'Host' does not seem to be injectable
[07:44:58] [INFO] testing if parameter 'Referer' is dynamic
[07:44:58] [WARNING] parameter 'Referer' does not appear to be dynamic
[07:44:58] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[07:44:58] [INFO] testing for SQL injection on parameter 'Referer'
[07:44:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[07:45:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[07:45:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[07:45:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:45:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:45:25] [INFO] parameter 'Referer' appears to be 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[07:45:25] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[07:45:25] [INFO] testing 'Firebird OR error-based - WHERE or HAVING clause'
[07:45:25] [INFO] testing 'Firebird error-based - Parameter replace'
[07:45:25] [INFO] testing 'Firebird inline queries'
[07:45:25] [INFO] testing 'Firebird stacked queries (heavy query - comment)'
[07:45:25] [INFO] testing 'Firebird stacked queries (heavy query)'
[07:45:25] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query)'
[07:45:25] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query)'
[07:45:25] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query - comment)'
[07:45:25] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query - comment)'
[07:45:25] [INFO] testing 'Firebird time-based blind - Parameter replace (heavy query)'
[07:45:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[07:45:27] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[07:45:28] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[07:45:29] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[07:45:31] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[07:45:32] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[07:45:33] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[07:45:35] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[07:45:36] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[07:45:37] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[07:45:39] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
[07:45:39] [INFO] checking if the injection point on Referer parameter 'Referer' is a false positive
[07:45:39] [WARNING] false positive or unexploitable injection point detected
[07:45:39] [WARNING] parameter 'Referer' does not seem to be injectable
[07:45:39] [INFO] testing if parameter 'User-Agent' is dynamic
[07:45:40] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[07:45:41] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[07:45:41] [INFO] heuristic (XSS) test shows that parameter 'User-Agent' might be vulnerable to cross-site scripting (XSS) attacks
[07:45:41] [INFO] testing for SQL injection on parameter 'User-Agent'
[07:45:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[07:45:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[07:47:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[07:47:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:47:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:47:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[07:47:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[07:48:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[07:48:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[07:48:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[07:48:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[07:48:13] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[07:48:16] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[07:48:18] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[07:48:23] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[07:48:26] [INFO] testing 'Firebird OR error-based - WHERE or HAVING clause'
[07:49:03] [INFO] testing 'Firebird error-based - Parameter replace'
[07:49:03] [INFO] testing 'Firebird error-based - ORDER BY clause'
[07:49:04] [INFO] testing 'Firebird inline queries'
[07:49:05] [INFO] testing 'Firebird stacked queries (heavy query - comment)'
[07:49:06] [INFO] testing 'Firebird stacked queries (heavy query)'
[07:49:09] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query)'
[07:49:12] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query)'
[07:49:15] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query - comment)'
[07:49:17] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query - comment)'
[07:49:19] [INFO] testing 'Firebird time-based blind - Parameter replace (heavy query)'
[07:49:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[07:49:45] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[07:49:50] [INFO] target URL appears to be UNION injectable with 7 columns
[07:49:52] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql') 
[07:50:20] [WARNING] parameter 'User-Agent' does not seem to be injectable
[07:50:20] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[07:50:20] [WARNING] HTTP error codes detected during run:
400 (Bad Request) - 1563 times, 403 (Forbidden) - 2751 times

[*] ending @ 07:50:20 /2019-06-08/

