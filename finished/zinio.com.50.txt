https://www.zinio.com/the-ultimate-guide-to-the-smart-home-m34655
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.3.5.151#dev}
|_ -| . [.]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 21:31:40 /2019-06-07/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[21:31:40] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[21:31:40] [INFO] testing connection to the target URL
[21:31:43] [INFO] checking if the target is protected by some kind of WAF/IPS
[21:31:43] [CRITICAL] heuristics detected that the target is protected by some kind of WAF/IPS
are you sure that you want to continue with further target testing? [Y/n] Y
[21:31:43] [WARNING] please consider usage of tamper scripts (option '--tamper')
[21:31:43] [INFO] testing if the target URL content is stable
[21:31:45] [INFO] target URL content is stable
[21:31:45] [INFO] testing if URI parameter '#1*' is dynamic
[21:31:47] [WARNING] URI parameter '#1*' does not appear to be dynamic
[21:31:49] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[21:31:53] [INFO] testing for SQL injection on URI parameter '#1*'
[21:31:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[21:31:54] [CRITICAL] WAF/IPS identified as 'AWS WAF (Amazon)'
[21:32:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[21:32:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[21:32:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[21:32:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[21:32:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[21:32:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[21:32:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[21:32:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[21:32:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[21:32:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[21:32:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[21:32:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[21:32:53] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[21:33:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[21:33:12] [INFO] URI parameter '#1*' appears to be 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)' injectable 
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[21:33:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[21:33:12] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[21:33:12] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[21:33:12] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[21:33:12] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[21:33:12] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[21:33:12] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[21:33:12] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[21:33:12] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[21:33:12] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[21:33:12] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
[21:33:12] [WARNING] false positive or unexploitable injection point detected
[21:33:12] [WARNING] URI parameter '#1*' does not seem to be injectable
[21:33:12] [INFO] testing if parameter 'Host' is dynamic
[21:33:12] [WARNING] parameter 'Host' does not appear to be dynamic
[21:33:12] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[21:33:12] [INFO] testing for SQL injection on parameter 'Host'
[21:33:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[21:33:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[21:33:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[21:33:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[21:33:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[21:33:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[21:33:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[21:33:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[21:33:31] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[21:33:31] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[21:33:31] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[21:33:31] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[21:33:31] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[21:33:31] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[21:33:35] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[21:33:36] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[21:33:37] [WARNING] parameter 'Host' does not seem to be injectable
[21:33:37] [INFO] testing if parameter 'Referer' is dynamic
[21:33:37] [WARNING] parameter 'Referer' does not appear to be dynamic
[21:33:37] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[21:33:37] [INFO] testing for SQL injection on parameter 'Referer'
[21:33:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[21:33:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[21:33:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[21:33:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[21:33:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[21:33:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[21:33:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[21:33:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[21:33:57] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[21:33:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[21:33:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[21:33:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[21:33:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[21:33:57] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[21:34:01] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[21:34:02] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[21:34:04] [WARNING] parameter 'Referer' does not seem to be injectable
[21:34:04] [INFO] testing if parameter 'User-Agent' is dynamic
[21:34:04] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[21:34:04] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[21:34:04] [INFO] testing for SQL injection on parameter 'User-Agent'
[21:34:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[21:34:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[21:34:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[21:34:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[21:34:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[21:34:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[21:34:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[21:34:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[21:34:23] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[21:34:23] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[21:34:23] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[21:34:23] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[21:34:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[21:34:24] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[21:34:27] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[21:34:29] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[21:34:30] [WARNING] parameter 'User-Agent' does not seem to be injectable
[21:34:30] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[21:34:30] [WARNING] HTTP error codes detected during run:
403 (Forbidden) - 2911 times, 404 (Not Found) - 3 times

[*] ending @ 21:34:30 /2019-06-07/

