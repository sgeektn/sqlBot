http://tools.ietf.org/html/bcp47
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.3.5.151#dev}
|_ -| . ["]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 01:35:52 /2019-05-29/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[01:35:53] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[01:35:54] [INFO] testing connection to the target URL
sqlmap got a 301 redirect to 'https://tools.ietf.org/html/bcp47'. Do you want to follow? [Y/n] Y
[01:35:59] [INFO] checking if the target is protected by some kind of WAF/IPS
[01:36:04] [INFO] testing if the target URL content is stable
[01:36:09] [WARNING] URI parameter '#1*' does not appear to be dynamic
[01:36:15] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[01:36:22] [INFO] testing for SQL injection on URI parameter '#1*'
[01:36:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[01:38:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[01:38:32] [WARNING] reflective value(s) found and filtering out
[01:49:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[01:51:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[01:52:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[01:59:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[01:59:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[02:01:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[02:01:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[02:02:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[02:07:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[02:08:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[02:09:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[02:14:08] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[02:15:18] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[02:16:34] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[02:25:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[02:27:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[02:36:25] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[02:37:46] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[02:38:51] [INFO] URI parameter '#1*' appears to be 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)' injectable 
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[02:38:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[02:38:51] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[02:39:18] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[02:42:22] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[02:42:49] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[02:45:47] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[02:46:01] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[02:46:52] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[02:47:01] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[02:47:11] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[02:47:21] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[02:47:30] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
[02:47:30] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
[02:47:39] [WARNING] false positive or unexploitable injection point detected
[02:47:39] [WARNING] URI parameter '#1*' does not seem to be injectable
[02:47:39] [WARNING] parameter 'Host' does not appear to be dynamic
[02:47:39] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[02:47:39] [INFO] testing for SQL injection on parameter 'Host'
[02:47:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[02:48:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[02:48:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[02:48:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[02:48:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[02:49:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[02:49:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[02:49:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[02:49:10] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[02:49:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[02:49:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[02:49:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[02:49:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[02:49:12] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[02:49:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[02:49:38] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[02:49:49] [WARNING] parameter 'Host' does not seem to be injectable
[02:49:49] [WARNING] parameter 'Referer' does not appear to be dynamic
[02:49:50] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[02:49:52] [INFO] testing for SQL injection on parameter 'Referer'
[02:49:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[02:51:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[02:52:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[02:53:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[02:54:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[02:54:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[02:54:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[02:55:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[02:55:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[02:55:14] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[02:55:15] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[02:55:17] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[02:55:18] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[02:55:20] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[02:56:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[02:57:07] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[02:57:59] [WARNING] parameter 'Referer' does not seem to be injectable
[02:57:59] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[02:58:00] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[02:58:02] [INFO] testing for SQL injection on parameter 'User-Agent'
[02:58:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[02:59:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[03:00:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[03:01:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[03:02:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[03:02:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[03:03:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[03:03:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[03:03:26] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[03:03:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[03:03:29] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[03:03:31] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[03:03:32] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[03:03:34] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[03:04:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[03:05:20] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[03:06:12] [WARNING] parameter 'User-Agent' does not seem to be injectable
[03:06:12] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[03:06:12] [WARNING] HTTP error codes detected during run:
400 (Bad Request) - 605 times

[*] ending @ 03:06:12 /2019-05-29/

