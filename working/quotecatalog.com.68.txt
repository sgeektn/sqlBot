https://quotecatalog.com/quotes/inspirational/?utm_campaign=homepage&utm_source=thoughtcatalog&utm_medium=insp_quote
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.3.8.13#dev}
|_ -| . [)]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:27:12 /2019-08-25/

[?1049h[22;0;0t[1;24r(B[m[4l[?7h[24;1H[?1049l[23;0;0t[?1l>[18:27:12] [INFO] fetched random HTTP User-Agent header value 'Mozilla/5.0 (Windows; U; Windows NT 5.1; de-LI; rv:1.9.0.16) Gecko/2009120208 Firefox/3.0.16 (.NET CLR 3.5.30729)' from file '/root/sqlmap/data/txt/user-agents.txt'
[18:27:13] [INFO] testing connection to the target URL
[18:27:35] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:28:03] [INFO] testing if the target URL content is stable
[18:28:22] [INFO] target URL content is stable
[18:28:22] [INFO] testing if GET parameter 'utm_campaign' is dynamic
[18:28:46] [WARNING] GET parameter 'utm_campaign' does not appear to be dynamic
[18:29:08] [WARNING] heuristic (basic) test shows that GET parameter 'utm_campaign' might not be injectable
[18:29:49] [INFO] testing for SQL injection on GET parameter 'utm_campaign'
[18:29:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:30:13] [WARNING] reflective value(s) found and filtering out
[18:48:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:55:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:10:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:21:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:25:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:27:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:29:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:31:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:36:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:40:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[19:45:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:51:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:55:02] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[20:04:35] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[20:15:42] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[20:22:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[20:33:31] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[20:40:01] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[20:51:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[20:57:16] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[21:07:02] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[21:12:40] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[21:22:01] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[21:28:37] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[21:28:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[21:29:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[21:29:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[21:29:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[21:29:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[21:30:18] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[21:30:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[21:31:01] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[21:31:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[21:31:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[21:31:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[21:32:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[21:32:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[21:32:40] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[21:32:55] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[21:33:11] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[21:33:31] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[21:33:52] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[21:34:07] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[21:34:30] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[21:34:45] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[21:35:06] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[21:35:22] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[21:35:56] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[21:36:32] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[21:36:32] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[21:36:32] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[21:37:01] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[21:37:42] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[21:38:20] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[21:39:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[21:39:37] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[21:40:12] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[21:40:48] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[21:41:24] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[21:42:00] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[21:42:34] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[21:43:08] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[21:53:41] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[22:02:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[22:02:08] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[22:09:25] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[22:16:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[22:23:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[22:31:27] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[22:39:20] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[22:46:34] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[22:53:33] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[22:56:33] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[22:59:30] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[23:02:55] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[23:06:10] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[23:09:33] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[23:13:04] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[23:17:19] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[23:21:33] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[23:25:26] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[23:29:23] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[23:33:17] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[23:37:13] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[23:41:31] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[23:46:00] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[23:47:59] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[23:52:13] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[23:55:35] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[23:59:42] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (IN)'
[00:03:02] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'
[00:07:10] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONVERT)'
[00:10:37] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'
[00:15:15] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONCAT)'
[00:19:01] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[00:23:34] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (XMLType)'
[00:27:30] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[00:31:55] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[00:35:43] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[00:40:10] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[00:43:58] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'
[00:48:27] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'
[00:52:15] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[00:56:32] [INFO] testing 'Firebird OR error-based - WHERE or HAVING clause'
[01:00:15] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[01:03:26] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[01:03:32] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[01:03:36] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[01:03:41] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[01:03:47] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[01:03:52] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[01:03:57] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[01:04:02] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[01:04:08] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'
[01:04:15] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'
[01:04:21] [INFO] testing 'Oracle error-based - Parameter replace'
[01:04:26] [INFO] testing 'Firebird error-based - Parameter replace'
[01:04:32] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[01:04:43] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[01:04:53] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[01:05:04] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[01:05:13] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[01:05:24] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[01:05:33] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[01:05:45] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[01:05:57] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[01:06:08] [INFO] testing 'Microsoft SQL Server/Sybase error-based - ORDER BY clause'
[01:06:20] [INFO] testing 'Oracle error-based - ORDER BY, GROUP BY clause'
[01:06:31] [INFO] testing 'Firebird error-based - ORDER BY clause'
[01:06:42] [INFO] testing 'MySQL inline queries'
[01:06:46] [INFO] testing 'PostgreSQL inline queries'
[01:06:52] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[01:06:52] [INFO] testing 'Oracle inline queries'
[01:06:58] [INFO] testing 'SQLite inline queries'
[01:07:04] [INFO] testing 'Firebird inline queries'
[01:07:08] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'
[01:08:50] [INFO] testing 'MySQL > 5.0.11 stacked queries'
[01:11:30] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP - comment)'
[01:13:10] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP)'
[01:15:52] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[01:17:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[01:20:25] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[01:22:06] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[01:24:53] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[01:26:35] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[01:29:24] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[01:31:09] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[01:34:00] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[01:35:47] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'
[01:37:35] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[01:40:19] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE)'
[01:43:01] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[01:44:39] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[01:47:32] [INFO] testing 'Oracle stacked queries (heavy query - comment)'
[01:49:13] [INFO] testing 'Oracle stacked queries (heavy query)'
[01:51:59] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[01:53:40] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[01:56:22] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[01:56:22] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[01:56:22] [INFO] testing 'IBM DB2 stacked queries (heavy query - comment)'
[01:57:59] [INFO] testing 'IBM DB2 stacked queries (heavy query)'
[02:00:43] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query - comment)'
[02:02:23] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query)'
[02:05:05] [INFO] testing 'Firebird stacked queries (heavy query - comment)'
[02:06:26] [INFO] testing 'Firebird stacked queries (heavy query)'
[02:08:55] [INFO] testing 'SAP MaxDB stacked queries (heavy query - comment)'
[02:10:25] [INFO] testing 'SAP MaxDB stacked queries (heavy query)'
[02:12:55] [INFO] testing 'HSQLDB >= 1.7.2 stacked queries (heavy query - comment)'
[02:14:21] [INFO] testing 'HSQLDB >= 1.7.2 stacked queries (heavy query)'
[02:16:44] [INFO] testing 'HSQLDB >= 2.0 stacked queries (heavy query - comment)'
[02:18:10] [INFO] testing 'HSQLDB >= 2.0 stacked queries (heavy query)'
[02:20:30] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[02:23:35] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[02:26:22] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[02:29:16] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[02:32:06] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[02:33:55] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[02:35:49] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[02:37:44] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[02:39:40] [INFO] testing 'MySQL <= 5.0.11 AND time-based blind (heavy query)'
[02:42:27] [INFO] testing 'MySQL <= 5.0.11 OR time-based blind (heavy query)'
[02:45:13] [INFO] testing 'MySQL <= 5.0.11 AND time-based blind (heavy query - comment)'
[02:47:06] [INFO] testing 'MySQL <= 5.0.11 OR time-based blind (heavy query - comment)'
[02:49:01] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[02:51:42] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[02:53:36] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[02:56:15] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[02:58:07] [INFO] testing 'MySQL AND time-based blind (ELT)'
[03:00:57] [INFO] testing 'MySQL OR time-based blind (ELT)'
[03:03:41] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[03:05:32] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[03:07:22] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[03:10:24] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[03:13:13] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[03:15:11] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[03:17:10] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[03:20:04] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[03:22:48] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[03:24:40] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[03:26:30] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[03:29:26] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF - comment)'
[03:31:27] [INFO] testing 'Microsoft SQL Server/Sybase AND time-based blind (heavy query)'
[03:34:19] [INFO] testing 'Microsoft SQL Server/Sybase OR time-based blind (heavy query)'
[03:37:04] [INFO] testing 'Microsoft SQL Server/Sybase AND time-based blind (heavy query - comment)'
[03:38:53] [INFO] testing 'Microsoft SQL Server/Sybase OR time-based blind (heavy query - comment)'
[03:40:46] [INFO] testing 'Oracle AND time-based blind'
[03:43:27] [INFO] testing 'Oracle OR time-based blind'
[03:46:10] [INFO] testing 'Oracle AND time-based blind (comment)'
[03:48:03] [INFO] testing 'Oracle OR time-based blind (comment)'
[03:49:58] [INFO] testing 'Oracle AND time-based blind (heavy query)'
[03:52:41] [INFO] testing 'Oracle OR time-based blind (heavy query)'
[03:55:21] [INFO] testing 'Oracle AND time-based blind (heavy query - comment)'
[03:57:12] [INFO] testing 'Oracle OR time-based blind (heavy query - comment)'
[03:59:01] [INFO] testing 'IBM DB2 AND time-based blind (heavy query)'
[04:01:41] [INFO] testing 'IBM DB2 OR time-based blind (heavy query)'
[04:04:22] [INFO] testing 'IBM DB2 AND time-based blind (heavy query - comment)'
[04:06:14] [INFO] testing 'IBM DB2 OR time-based blind (heavy query - comment)'
[04:08:05] [INFO] testing 'SQLite > 2.0 AND time-based blind (heavy query)'
[04:10:54] [INFO] testing 'SQLite > 2.0 OR time-based blind (heavy query)'
[04:13:30] [INFO] testing 'SQLite > 2.0 AND time-based blind (heavy query - comment)'
[04:15:16] [INFO] testing 'SQLite > 2.0 OR time-based blind (heavy query - comment)'
[04:17:06] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query)'
[04:19:46] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query)'
[04:22:25] [INFO] testing 'Firebird >= 2.0 AND time-based blind (heavy query - comment)'
[04:24:14] [INFO] testing 'Firebird >= 2.0 OR time-based blind (heavy query - comment)'
[04:26:03] [INFO] testing 'SAP MaxDB AND time-based blind (heavy query)'
[04:28:42] [INFO] testing 'SAP MaxDB OR time-based blind (heavy query)'
[04:31:20] [INFO] testing 'SAP MaxDB AND time-based blind (heavy query - comment)'
[04:33:08] [INFO] testing 'SAP MaxDB OR time-based blind (heavy query - comment)'
[04:34:57] [INFO] testing 'HSQLDB >= 1.7.2 AND time-based blind (heavy query)'
[04:37:39] [INFO] testing 'HSQLDB >= 1.7.2 OR time-based blind (heavy query)'
[04:40:21] [INFO] testing 'HSQLDB >= 1.7.2 AND time-based blind (heavy query - comment)'
[04:42:15] [INFO] testing 'HSQLDB >= 1.7.2 OR time-based blind (heavy query - comment)'
[04:44:09] [INFO] testing 'HSQLDB > 2.0 AND time-based blind (heavy query)'
[04:46:53] [INFO] testing 'HSQLDB > 2.0 OR time-based blind (heavy query)'
[04:49:38] [INFO] testing 'HSQLDB > 2.0 AND time-based blind (heavy query - comment)'
[04:51:33] [INFO] testing 'HSQLDB > 2.0 OR time-based blind (heavy query - comment)'
[04:53:27] [INFO] testing 'Informix AND time-based blind (heavy query)'
[04:56:08] [INFO] testing 'Informix OR time-based blind (heavy query)'
[04:58:51] [INFO] testing 'Informix AND time-based blind (heavy query - comment)'
[05:00:41] [INFO] testing 'Informix OR time-based blind (heavy query - comment)'
[05:02:29] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:04:30] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:05:39] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:05:42] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:05:45] [INFO] testing 'MySQL <= 5.0.11 time-based blind - Parameter replace (heavy queries)'
[05:05:48] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:05:52] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:05:55] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:05:58] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[05:06:01] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[05:06:05] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind - Parameter replace (heavy queries)'
[05:06:08] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'
[05:06:11] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'
[05:06:15] [INFO] testing 'Oracle time-based blind - Parameter replace (heavy queries)'
[05:06:18] [INFO] testing 'SQLite > 2.0 time-based blind - Parameter replace (heavy query)'
[05:06:22] [INFO] testing 'Firebird time-based blind - Parameter replace (heavy query)'
[05:06:25] [INFO] testing 'SAP MaxDB time-based blind - Parameter replace (heavy query)'
[05:06:28] [INFO] testing 'IBM DB2 time-based blind - Parameter replace (heavy query)'
[05:06:31] [INFO] testing 'HSQLDB >= 1.7.2 time-based blind - Parameter replace (heavy query)'
[05:09:12] [INFO] testing 'HSQLDB > 2.0 time-based blind - Parameter replace (heavy query)'
[05:11:57] [INFO] testing 'Informix time-based blind - Parameter replace (heavy query)'
[05:12:01] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:12:08] [INFO] testing 'MySQL <= 5.0.11 time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[05:12:15] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[05:12:23] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[05:12:29] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind - ORDER BY clause (heavy query)'
[05:12:37] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)'
[05:12:44] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)'
[05:12:51] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[05:12:59] [INFO] testing 'HSQLDB >= 1.7.2 time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[05:13:06] [INFO] testing 'HSQLDB > 2.0 time-based blind - ORDER BY, GROUP BY clause (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[05:13:13] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:20:19] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:27:54] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:34:53] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:43:02] [WARNING] GET parameter 'utm_campaign' does not seem to be injectable
[05:43:02] [INFO] testing if GET parameter 'utm_source' is dynamic
[05:43:09] [WARNING] GET parameter 'utm_source' does not appear to be dynamic
[05:43:13] [WARNING] heuristic (basic) test shows that GET parameter 'utm_source' might not be injectable
[05:43:31] [INFO] testing for SQL injection on GET parameter 'utm_source'
[05:43:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[06:02:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[06:09:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[06:25:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:37:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:43:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[06:45:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[06:47:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[06:49:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[06:55:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[06:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[07:05:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[07:12:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[07:16:21] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[07:28:11] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[07:38:34] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[07:45:12] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[07:56:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[08:03:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[08:15:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[08:21:42] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[08:34:21] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[08:42:25] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[08:56:28] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[09:04:45] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[09:05:04] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[09:05:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[09:05:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[09:06:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[09:06:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[09:06:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[09:07:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[09:07:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[09:07:47] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[09:08:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[09:08:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[09:08:56] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[09:09:23] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[09:09:41] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[09:10:00] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[09:10:26] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[09:10:46] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[09:11:03] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[09:11:30] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[09:11:47] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[09:12:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[09:12:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[09:12:48] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[09:13:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[09:14:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[09:14:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[09:14:18] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[09:15:02] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[09:15:53] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[09:16:37] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[09:17:18] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[09:17:58] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[09:18:39] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[09:19:23] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[09:20:02] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[09:20:46] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[09:21:21] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[09:21:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[09:34:16] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[09:42:50] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[09:42:50] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[09:51:12] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[09:58:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[10:07:05] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[10:15:02] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[10:22:41] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[10:29:58] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[10:37:30] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[10:41:14] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[10:44:53] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[10:48:30] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[10:52:02] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[10:55:31] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[10:59:02] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[11:02:43] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[11:06:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[11:10:19] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[11:14:21] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[11:18:24] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[11:22:21] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[11:26:28] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[11:30:21] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[11:32:09] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[11:35:53] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[11:38:51] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[11:42:30] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (IN)'
[11:45:27] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'
[11:49:09] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONVERT)'
[11:52:07] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'
[11:55:49] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONCAT)'
[11:58:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[12:02:53] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (XMLType)'
[12:06:21] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[12:10:21] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[12:13:45] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[12:17:52] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[12:21:17] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'
[12:25:39] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (DBMS_UTILITY.SQLID_TO_SQLHASH)'
[12:30:25] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[12:37:12] [INFO] testing 'Firebird OR error-based - WHERE or HAVING clause'
[12:40:46] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:43:33] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[12:43:38] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[12:43:43] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[12:43:47] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[12:43:52] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[12:43:57] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[12:44:01] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:44:07] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:44:11] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'
[12:44:17] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'
[12:44:22] [INFO] testing 'Oracle error-based - Parameter replace'
[12:44:26] [INFO] testing 'Firebird error-based - Parameter replace'
[12:44:32] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[12:44:40] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[12:44:49] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[12:44:59] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:45:08] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[12:45:17] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[12:45:26] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:45:36] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:45:45] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:45:55] [INFO] testing 'Microsoft SQL Server/Sybase error-based - ORDER BY clause'
[12:46:05] [INFO] testing 'Oracle error-based - ORDER BY, GROUP BY clause'
[12:46:15] [INFO] testing 'Firebird error-based - ORDER BY clause'
[12:46:24] [INFO] testing 'MySQL inline queries'
[12:46:29] [INFO] testing 'PostgreSQL inline queries'
[12:46:34] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[12:46:34] [INFO] testing 'Oracle inline queries'
[12:46:39] [INFO] testing 'SQLite inline queries'
[12:46:44] [INFO] testing 'Firebird inline queries'
[12:46:48] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'
[12:48:22] [INFO] testing 'MySQL > 5.0.11 stacked queries'
[12:50:52] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP - comment)'
[12:52:25] [INFO] testing 'MySQL > 5.0.11 stacked queries (query SLEEP)'
[12:54:52] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[12:56:27] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[12:59:00] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[13:00:09] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[13:02:03] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[13:03:37] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[13:06:12] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[13:07:37] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[13:09:53] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[13:11:13] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'
[13:12:34] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'
[13:14:43] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE)'
[13:16:56] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[13:18:20] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'
[13:20:36] [INFO] testing 'Oracle stacked queries (heavy query - comment)'
[13:21:58] [INFO] testing 'Oracle stacked queries (heavy query)'
[13:24:16] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'
[13:25:41] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'
[13:27:55] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'
[13:27:55] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'
[13:27:55] [INFO] testing 'IBM DB2 stacked queries (heavy query - comment)'
[13:29:15] [INFO] testing 'IBM DB2 stacked queries (heavy query)'
[13:31:28] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query - comment)'
[13:32:52] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query)'
[13:35:07] [INFO] testing 'Firebird stacked queries (heavy query - comment)'
[13:36:30] [INFO] testing 'Firebird stacked queries (heavy query)'
[13:38:48] [INFO] testing 'SAP MaxDB stacked queries (heavy query - comment)'
[13:40:10] [INFO] testing 'SAP MaxDB stacked queries (heavy query)'
